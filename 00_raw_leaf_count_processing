rm(list=ls())
getwd()
setwd("D:/Innsbruck/Drought legacies/R")

library(tidyverse)
library(readxl)
library(lubridate)
library(ggthemes)
library(RColorBrewer)

#Read in data
data <- read_excel("Counts_raw data.xlsx", na = "NA",
                   col_type = c(rep("guess", 6), rep("numeric", 60)))

#Create vector with dates of the drought and vector of harvest
harvest <- ymd("2020-08-05")
drought <- ymd(c("2020-06-17", "2020-07-31"))

#rename "Code" to "Plot"
names(data)[2] <- "Plot"

#change data to ymd (without time)
data$Date <- ymd(data$Date)

#Sum counts of various columns
#Sum unknown grass and unknown_grass
data <- data %>%
  mutate(`unknown grasses` = ifelse(is.na(`unknown grass`) & is.na(unknown_grass) & is.na(unknown_smoothgrass) 
                                  & is.na(`Arrhenatherum elatius`) & is.na(`Hairy carex (A. elatius)`) & is.na(`Festuca pratensis`), NA,
                           rowSums(cbind(`unknown grass`, unknown_grass, unknown_smoothgrass,
                                         `Arrhenatherum elatius`, `Hairy carex (A. elatius)`, `Festuca pratensis`), na.rm = TRUE)))

#Delete the old columns
data <- subset(data, select = -c(unknown_grass,`unknown grass`, unknown_smoothgrass, 
                                 `Arrhenatherum elatius`, `Hairy carex (A. elatius)`, `Festuca pratensis`))

#Sum round leaves Phyteum, Phyteum betonificolia, Phyteum orbiculare into Phyteum_sp
data <- data %>% 
  mutate(`Phyteum sp` = ifelse(is.na(`Phyteum betonicifolia`) & is.na(`round_leaves_Phyteum?`) & is.na(`Phyteum orbiculare`), NA,
                                         rowSums(cbind(`Phyteum betonicifolia`, `round_leaves_Phyteum?`, `Phyteum orbiculare`),na.rm = TRUE)))

#delete old columns
data <- subset(data, select = -c(`Phyteum betonicifolia`,`round_leaves_Phyteum?`, `Phyteum orbiculare`))

#Sum Vicia species
data <- data %>% 
  mutate(`Vicia sp` = ifelse(is.na(`Vicia cracca`) & is.na(`Vicia sepium`), NA,
                           rowSums(cbind(`Vicia cracca`, `Vicia sepium`), na.rm=TRUE)))
#Delete old columns
data <- subset(data, select = -c(`Vicia cracca`, `Vicia sepium`))

#Sum unknown_verbascum, unknown_Prunella, unknown forb, Acinos and Cerastium
data <- data %>% 
  mutate(`unknown forb` = ifelse(is.na(`unknown herb`) & is.na(`unknown_Verbascum thapsus?`) & is.na(`unknown_Prunella?`)
                               & is.na(`Acinos alpinus`) & is.na(`Cerastium fontanum`), NA,
                               rowSums(cbind(`unknown herb`, `unknown_Verbascum thapsus?`, `unknown_Prunella?`,
                                             `Acinos alpinus`, `Cerastium fontanum`), na.rm = TRUE)))
#Delete old columns
data <- subset(data, select = -c(`unknown_Verbascum thapsus?`,`unknown herb`, `unknown_Prunella?`, `Acinos alpinus`, `Cerastium fontanum`))

#Delete columns with only NAs:
#Helianthemum nummularium, Colchicum autumnale, Dactylorhiza maculate, Ranunculus nemorosus
data <- data %>% 
  select(-c(`Helianthemum nummularium`,`Colchicum autumnale`,
            `Dactylorhiza maculate`,`Ranunculus nemorosus`))

#Combine dates for which several days were needed to count forbs and grasses
#Take average of these dates to have one counting point
names(data)[6] <- "Date_real"

#18.05, 20.05, 25.05, 27.05
#-> 22.05 for all these four dates
data <- data %>% 
  mutate(Date = if_else(Date_real <= ymd("2020-05-27"), ymd("2020-05-22"), Date_real))

#12.7, 14.7 und 20.7 kÃ¶nnen einfach zum 16.7 werden
#(idealerweise 14 und 20 fÃ¼r herbs zusamennehmen und 12 und 14 fÃ¼r grasses)
data <- data %>% 
  mutate(Date = if_else(Date >= ymd("2020-07-12")& Date <= ymd("2020-07-20"), ymd("2020-07-16"),Date))

#Make long data frame
data_long <- data %>%
  pivot_longer(cols = c(7:50), names_to = "Species", values_to = "Count")

#Add species abbreviations
data_long$abbr <- paste(str_sub(str_split_fixed(data_long$Species, n=2, " ")[,1], 1, 3),
                        str_sub(str_split_fixed(data_long$Species, n=2, " ")[,2], 1, 3) , sep="_")

#Sum the 4 sections of the plot (A, B, C, D)
data_sum <- data_long %>%
  group_by(Author, Plot, Treatment, Replicate, Date_real, Species, abbr) %>%
  summarise(SCount = sum(Count, na.rm=T))
data_sum

#Add whether species belonged to forb or grass counting day
#Carex and Crocus were counted on grass days
#Legumes were counted on forb days
levels(factor(data_sum$Species))
data_sum$counting_group <- plyr::mapvalues(data_sum$Species, 
                                     from = levels(factor(data_sum$Species)), 
                                     to = c("F", "G", "F", "G", "F",
                                            "G", "F", "F", "G", "F",
                                            "F", "F", "G", "G", "G",
                                            "G", "F", "F", "F", "G",
                                            "F", "F", "F", "F", "G",
                                            "F", "F", "F", "F", "F",
                                            "F", "F", "F", "F", "F",
                                            "F", "F", "F", "F", "G", 
                                            "F", "G", "F", "F"))

#Determine whether Date_real was FG, G or F counting day
tot_count_FG <- data_sum %>%
  group_by(Plot, Date_real, counting_group) %>%
  summarise(tot_count_FG = sum(SCount, na.rm = T))
tot_count_FG
tot_count_FG_wide <- pivot_wider(tot_count_FG, id_cols = c("Plot", "Date_real"), names_from = counting_group, values_from = tot_count_FG)

View(tot_count_FG_wide)

#There are a few dates where there are a few grasses counted, but they should not have been --> Crocus and Phleum were in some cases counted on an F day
View(data_sum)

#If 0 counts, the specific group was not counted on the date
#But there are some cases where Crocus and Phleum were counted on an F day
#So set to > 10 instead of 0
tot_count_FG_wide$day_of_count <- NA
tot_count_FG_wide$day_of_count[tot_count_FG_wide$F > 10 & tot_count_FG_wide$G > 10] <- "FG"
tot_count_FG_wide$day_of_count[tot_count_FG_wide$F < 10 & tot_count_FG_wide$G < 10] <- "nothing"
tot_count_FG_wide$day_of_count[tot_count_FG_wide$F < 10 & tot_count_FG_wide$G > 10] <- "G_only"
tot_count_FG_wide$day_of_count[tot_count_FG_wide$F > 10 & tot_count_FG_wide$G < 10] <- "F_only"
View(tot_count_FG_wide) #good

#Merge to data_sum
data_sum <- merge(data_sum, tot_count_FG_wide, by = c("Plot", "Date_real"))
head(data_sum)

#On days the plot was not counted, 0 counts should be NA
data_sum$SCount[which(data_sum$day_of_count == "nothing" & data_sum$SCount == 0)] <- NA

#On G counting days, F species should be NA
data_sum$SCount[which(data_sum$day_of_count == "G_only" & data_sum$counting_group == "F" & data_sum$SCount == 0)] <- NA

#On F counting days, G species should be NA
data_sum$SCount[which(data_sum$day_of_count == "F_only" & data_sum$counting_group == "G" & data_sum$SCount == 0)] <- NA

View(data_sum) #good

#Make Date_real into counting time points per F and G
F_date <- levels(factor(as.character(data_sum$Date_real[data_sum$day_of_count %in% c("FG", "F_only")]),))
G_date <- levels(factor(as.character(data_sum$Date_real[data_sum$day_of_count %in% c("FG", "G_only")]),))

#Make time points for forb counting days
F_date
data_sum$time_point[data_sum$counting_group == "F" & data_sum$F > 20] <- 
  plyr::revalue(as.character(data_sum$Date_real[data_sum$counting_group == "F" & data_sum$F > 20]), 
          c("2020-05-18"="1", "2020-05-20"="1", "2020-05-27"="1",
            "2020-06-12"="2", "2020-06-24"="3", "2020-07-14"="4", "2020-07-20"="4",
            "2020-07-30"="5", "2020-08-12"="6", "2020-08-25"="7", "2020-09-09"="8",
            "2020-09-24"="9", "2020-10-22"="10"))

#Make time points for grass counting days
G_date
data_sum$time_point[data_sum$counting_group == "G" & data_sum$G > 20] <- 
  plyr::revalue(as.character(data_sum$Date_real[data_sum$counting_group == "G" & data_sum$G > 20]), 
          c("2020-05-18"="1", "2020-05-25"="1", "2020-05-27"="1",
            #here we skipped one grass time point, so skip time point 2
            "2020-06-23"="3", "2020-07-12"="4", "2020-07-14"="4", 
            "2020-07-28"="5", "2020-08-12"="6", "2020-08-25"="7", "2020-09-09"="8",
            "2020-09-24"="9", "2020-10-22"="10"))
View(data_sum) #looks good

#Crocus and Phleum are, in some cases, missing their time point 2 count, because they were counted with the forbs that day
#But not an issue, because all grass species miss a time point 2 due to covid restrictions

#Save file
save(data_sum, file="LeafCount_data_processed.Rda")
